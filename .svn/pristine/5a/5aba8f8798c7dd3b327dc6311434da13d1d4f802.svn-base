package com.lng.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;

import com.lng.dao.SuperDao;
import com.lng.pojo.SuperUser;
import com.lng.service.SuperService;
import com.lng.tools.CurrentTime;
import com.lng.tools.MD5;
import com.lng.util.GenericResponse;
import com.lng.util.ResponseFormat;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@RestController
@Api(tags = "后台用户管理")
public class SuperController {
	
	@Autowired
	public SuperService ss;
	@Autowired
	public SuperDao sDao;
	
	@PostMapping("addUser")
	@ApiOperation(value = "增加用户",notes = "增加用户接口信息")
	@ApiResponses({@ApiResponse(code = 1000, message = "服务器错误"),@ApiResponse(code = 20005, message = "用户已存在")})
	@ApiImplicitParams({
		@ApiImplicitParam(name = "account", value = "用户账号", defaultValue = "wmk", required = true),
		@ApiImplicitParam(name = "password", value = "用户密码", defaultValue = "123456", required = true),
		@ApiImplicitParam(name = "realName", value = "用户姓名", defaultValue = "王杰", required = true),
		@ApiImplicitParam(name = "sex", value = "用户性别", defaultValue = "男", required = true),
		@ApiImplicitParam(name = "mobile", value = "手机号")
	})
	public GenericResponse addUser(String account,String password,String realName,String sex,String mobile) {
		Integer status = 200;
		String uId = "";
		try {
			if(ss.findInfoByOpt(account, "").size() > 0) {
				status = 20005;
			}else {
				SuperUser user = new SuperUser(account, new MD5().calcMD5(password), realName, sex, mobile,
						CurrentTime.getCurrentTime(), "", 0, 1);
				uId = sDao.save(user).getId();
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			status = 1000;
		}
		return ResponseFormat.retParam(status, uId);
	}
	
	@PostMapping("upUser")
	@ApiOperation(value = "修改指定用户的信息",notes = "修改用户信息，为空时不修改")
	@ApiResponses({@ApiResponse(code = 1000, message = "服务器错误"),@ApiResponse(code = 20004, message = "用户不存在")})
	@ApiImplicitParams({
		@ApiImplicitParam(name = "uId", value = "用户编号", required = true),
		@ApiImplicitParam(name = "password", value = "用户密码"),
		@ApiImplicitParam(name = "mobile", value = "手机号"),
		@ApiImplicitParam(name = "accountStatus", value = "账号状态"),
	})
	public GenericResponse upUser(String uId,String password,String mobile,Integer accountStatus) {
		Integer status = 200;
		try {
			SuperUser user  = ss.getEntityById(uId);
			if(user != null) {
				if(password == null || password == "") {
					
				}else {
					user.setPassword(password);
				}
				if(mobile == null || mobile == "" ) {
					
				}else {
					user.setMobile(new MD5().calcMD5(mobile));
				}
				if(accountStatus != null) {
					if(accountStatus.equals(1) || accountStatus.equals(0)) {
						user.setAccountStatus(accountStatus);
					}
				}
				sDao.save(user);
			}else {
				status = 20004;
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			status = 1000;
		}
		return ResponseFormat.retParam(status, "");
	}
}
