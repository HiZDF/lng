package com.lng.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.lng.pojo.Super;
import com.lng.service.SuperService;
import com.lng.util.Constants;
import com.lng.util.GenericResponse;
import com.lng.util.ResponseFormat;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@RestController
@Api(tags = "用户登录之前相关接口")
public class Login {

	@Autowired
	public SuperService ss;
	
	@ApiOperation("跳转到首页")
	@GetMapping("index")
	public ModelAndView welcome(){
		return new ModelAndView("hello");
	}
	
	@ApiOperation("登录动作接口")
	@ApiImplicitParams({
		@ApiImplicitParam(name = "account", value = "用户账号", defaultValue = "wmk", required = true),
		@ApiImplicitParam(name = "password", value = "用户密码", defaultValue = "123456", required = true)
	})
	@GetMapping("superLogin")
	@ApiResponses({@ApiResponse(code = 20002, message = "账号不存在或密码错误"),
				   @ApiResponse(code = 10002, message = "参数为空"),
				   @ApiResponse(code = 40001, message = "系统繁忙，请稍后重试")})
	public GenericResponse superLogin(HttpServletRequest request,String account,String password) {
		Integer status = 40001;
		HttpSession sess = request.getSession(true);
		if(account == null || password == null) {
			status = 10002;
		}else {
			List<Super> sList = ss.findInfoByOpt(account, password);
			if(sList.size() > 0) {
				sess.setAttribute(Constants.LOGIN_ACCOUNT, account);
				sess.setAttribute(Constants.LOGIN_USER_ID, sList.get(0).getId());
//				sess.setAttribute(Constants.LOGIN_USER_ROLE_ID, sList.get(0).getId());
				status = 200;
			}else {
				status = 20002;
			}
		}
		return ResponseFormat.retParam(status, null);
	}
}
